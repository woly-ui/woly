{"componentChunkName":"component---node-modules-gatsby-theme-woly-src-templates-usage-js","path":"/woly/atoms/loader","result":{"data":{"usage":{"fileAbsolutePath":"/home/runner/work/woly/woly/src/woly/atoms/loader/usage.mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Loader\"), \" component is used when retrieving data or performing slow computations and helps to notify users that loading is underway.\\nDescription text below animated spinner provides more details on the current operation.\"), mdx(\"p\", null, \"Use a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Loader\"), \" component whenever the wait time is anticipated to be longer than three seconds.\"), mdx(\"h3\", null, \"Example\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(State, {\n    initial: false,\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(React.Fragment, null, mdx(Button, {\n      text: \"Toggle loader\",\n      onClick: change,\n      variant: \"primary\",\n      mdxType: \"Button\"\n    }), value ? mdx(\"div\", {\n      style: {\n        width: 300\n      }\n    }, mdx(Loader, {\n      description: mdx(Text, {\n        type: \"S\",\n        mdxType: \"Text\"\n      }, \"Some action in progress...\"),\n      mdxType: \"Loader\"\n    })) : null);\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <State initial={false} change={(i) => !i}>\\n    {(value, change) => (\\n      <>\\n        <Button text=\\\"Toggle loader\\\" onClick={change} variant=\\\"primary\\\" />\\n        {value ? (\\n          <div style={{ width: 300 }}>\\n            <Loader description={<Text type=\\\"S\\\">Some action in progress...</Text>} />\\n          </div>\\n        ) : null}\\n      </>\\n    )}\\n  </State>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Example with data fetching\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(StateEvent, {\n    initial: {\n      loading: false,\n      data: null\n    },\n    change: function change(i) {\n      return i;\n    },\n    mdxType: \"StateEvent\"\n  }, function (value, change) {\n    return value.loading ? mdx(\"div\", {\n      style: {\n        width: 300\n      }\n    }, mdx(Loader, {\n      variant: \"primary\",\n      description: mdx(Text, {\n        weight: \"medium\",\n        mdxType: \"Text\"\n      }, \"Fetching users, please wait\"),\n      mdxType: \"Loader\"\n    })) : value.data ? mdx(React.Fragment, null, mdx(UsersList, {\n      data: value.data,\n      style: {\n        marginBottom: 10\n      },\n      mdxType: \"UsersList\"\n    }), mdx(Button, {\n      variant: \"primary\",\n      text: \"Reset\",\n      onClick: function onClick() {\n        return change({\n          loading: false,\n          data: null\n        });\n      },\n      mdxType: \"Button\"\n    })) : mdx(Button, {\n      variant: \"primary\",\n      text: \"Fetch users\",\n      onClick: function onClick() {\n        return loadUsers({\n          value: value,\n          change: change\n        });\n      },\n      mdxType: \"Button\"\n    });\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <StateEvent\\n    initial={{\\n      loading: false,\\n      data: null,\\n    }}\\n    change={(i) => i}\\n  >\\n    {(value, change) =>\\n      value.loading ? (\\n        <div style={{ width: 300 }}>\\n          <Loader\\n            variant=\\\"primary\\\"\\n            description={<Text weight=\\\"medium\\\">Fetching users, please wait</Text>}\\n          />\\n        </div>\\n      ) : value.data ? (\\n        <>\\n          <UsersList data={value.data} style={{ marginBottom: 10 }} />\\n          <Button\\n            variant=\\\"primary\\\"\\n            text=\\\"Reset\\\"\\n            onClick={() => change({ loading: false, data: null })}\\n          />\\n        </>\\n      ) : (\\n        <Button variant=\\\"primary\\\" text=\\\"Fetch users\\\" onClick={() => loadUsers({ value, change })} />\\n      )\\n    }\\n  </StateEvent>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"description\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"'Loading...'\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description text below the animated spinner\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"priority\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"'secondary'\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Priority prop to style Loader component\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"...\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"HTMLDivElement\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{}\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Other props are inherited from \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"HTMLDivElement\"))))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"pageID":"65bf9a4f-0e56-582a-96da-f431203a3773","name":"loader","category":"atoms","package":"woly"}},"staticQueryHashes":["1297603051"]}