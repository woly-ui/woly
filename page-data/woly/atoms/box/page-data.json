{"componentChunkName":"component---node-modules-gatsby-theme-woly-src-templates-usage-js","path":"/woly/atoms/box","result":{"data":{"allMdx":{"nodes":[{"id":"13c06742-e5e0-534f-acb0-d39da955f16b","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Box\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BoxVertical\"), \" are wrapper components, that add a box model to elements that don't have it.\"), mdx(\"h2\", null, \"Example with Box\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(block.L, {\n    style: {\n      width: '400px',\n      padding: '100px'\n    }\n  }, mdx(Tooltip, {\n    message: mdx(Box, {\n      mdxType: \"Box\"\n    }, mdx(Text, {\n      mdxType: \"Text\"\n    }, \"\\u0433. \\u041A\\u043E\\u043C\\u0441\\u043E\\u043C\\u043E\\u043B\\u044C\\u0441\\u043A \\u043D\\u0430 \\u0410\\u043C\\u0443\\u0440\\u0435, \\u0443\\u043B. 1-\\u0433\\u043E \\u043E\\u043A\\u0442\\u044F\\u0431\\u0440\\u044F, \\u0434. 145, \\u043A\\u043E\\u0440\\u043F. 9, \\u043A\\u0432. 16\")),\n    position: \"bottom\",\n    mdxType: \"Tooltip\"\n  }, mdx(Input, {\n    leftIcon: mdx(IconInfo, {\n      mdxType: \"IconInfo\"\n    }),\n    name: \"adress\",\n    onChange: function onChange() {\n      return console.info('On input change');\n    },\n    type: \"text\",\n    priority: \"primary\",\n    value: \"\\u0433. \\u041A\\u043E\\u043C\\u0441\\u043E\\u043C\\u043E\\u043B\\u044C\\u0441\\u043A \\u043D\\u0430 \\u0410\\u043C\\u0443\\u0440\\u0435, \\u0443\\u043B. 1-\\u0433\\u043E \\u043E\\u043A\\u0442\\u044F\\u0431\\u0440\\u044F, \\u0434. 145, \\u043A\\u043E\\u0440\\u043F. 9, \\u043A\\u0432. 16\",\n    mdxType: \"Input\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <block.L style={{ width: '400px', padding: '100px' }}>\\n    <Tooltip\\n      message={\\n        <Box>\\n          <Text>\\u0433. \\u041A\\u043E\\u043C\\u0441\\u043E\\u043C\\u043E\\u043B\\u044C\\u0441\\u043A \\u043D\\u0430 \\u0410\\u043C\\u0443\\u0440\\u0435, \\u0443\\u043B. 1-\\u0433\\u043E \\u043E\\u043A\\u0442\\u044F\\u0431\\u0440\\u044F, \\u0434. 145, \\u043A\\u043E\\u0440\\u043F. 9, \\u043A\\u0432. 16</Text>\\n        </Box>\\n      }\\n      position=\\\"bottom\\\"\\n    >\\n      <Input\\n        leftIcon={<IconInfo />}\\n        name=\\\"adress\\\"\\n        onChange={() => console.info('On input change')}\\n        type=\\\"text\\\"\\n        priority=\\\"primary\\\"\\n        value=\\\"\\u0433. \\u041A\\u043E\\u043C\\u0441\\u043E\\u043C\\u043E\\u043B\\u044C\\u0441\\u043A \\u043D\\u0430 \\u0410\\u043C\\u0443\\u0440\\u0435, \\u0443\\u043B. 1-\\u0433\\u043E \\u043E\\u043A\\u0442\\u044F\\u0431\\u0440\\u044F, \\u0434. 145, \\u043A\\u043E\\u0440\\u043F. 9, \\u043A\\u0432. 16\\\"\\n      />\\n    </Tooltip>\\n  </block.L>\\n</Playground>\\n\")), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(block.L, {\n    style: {\n      paddingBottom: '400px'\n    }\n  }, mdx(Tooltip, {\n    message: mdx(React.Fragment, null, mdx(Box, {\n      mdxType: \"Box\"\n    }, mdx(Text, {\n      type: \"S\",\n      mdxType: \"Text\"\n    }, \"\\u0421\\u043E\\u0433\\u043B\\u0430\\u0441\\u0438\\u0435 \\u043D\\u0430 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0443 \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u2013 \\u044D\\u0442\\u043E \\u043F\\u0438\\u0441\\u044C\\u043C\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0440\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435 \\u0433\\u0440\\u0430\\u0436\\u0434\\u0430\\u043D\\u0438\\u043D\\u0430 \\u0420\\u043E\\u0441\\u0441\\u0438\\u0439\\u0441\\u043A\\u043E\\u0439 \\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438, \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u0435 \\u043E\\u043D \\u0434\\u0430\\u0435\\u0442 \\u0437\\u0430\\u0438\\u043D\\u0442\\u0435\\u0440\\u0435\\u0441\\u043E\\u0432\\u0430\\u043D\\u043D\\u043E\\u0439 \\u0441\\u0442\\u043E\\u0440\\u043E\\u043D\\u0435 \\u043D\\u0430 \\u043F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435, \\u0441\\u0431\\u043E\\u0440, \\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445 \\u0441\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u0439 \\u043E \\u0441\\u0435\\u0431\\u0435.\")), mdx(Box, {\n      mdxType: \"Box\"\n    }, mdx(block.S, {\n      style: {\n        display: 'flex'\n      }\n    }, mdx(Button, {\n      onClick: function onClick() {\n        return alert('Hi!');\n      },\n      text: \"\\u041D\\u0430\\u0437\\u0430\\u0434\",\n      priority: \"secondary\",\n      outlined: true,\n      style: {\n        marginRight: '30px'\n      },\n      mdxType: \"Button\"\n    }), mdx(Button, {\n      onClick: function onClick() {\n        return alert('Hi!');\n      },\n      text: \"\\u0414\\u0430\\u043B\\u044C\\u0448\\u0435\",\n      priority: \"secondary\",\n      mdxType: \"Button\"\n    })))),\n    position: \"bottom\",\n    mdxType: \"Tooltip\"\n  }, mdx(State, {\n    initial: false,\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(Checkbox, {\n      checked: value,\n      id: \"id\",\n      onChange: change,\n      text: \"\\u0421\\u043E\\u0433\\u043B\\u0430\\u0441\\u0438\\u0435 \\u043D\\u0430 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0443 \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\",\n      priority: \"primary\",\n      mdxType: \"Checkbox\"\n    });\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <block.L style={{ paddingBottom: '400px' }}>\\n    <Tooltip\\n      message={\\n        <>\\n          <Box>\\n            <Text type=\\\"S\\\">\\n              \\u0421\\u043E\\u0433\\u043B\\u0430\\u0441\\u0438\\u0435 \\u043D\\u0430 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0443 \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u2013 \\u044D\\u0442\\u043E \\u043F\\u0438\\u0441\\u044C\\u043C\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0440\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435 \\u0433\\u0440\\u0430\\u0436\\u0434\\u0430\\u043D\\u0438\\u043D\\u0430\\n              \\u0420\\u043E\\u0441\\u0441\\u0438\\u0439\\u0441\\u043A\\u043E\\u0439 \\u0424\\u0435\\u0434\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438, \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u0435 \\u043E\\u043D \\u0434\\u0430\\u0435\\u0442 \\u0437\\u0430\\u0438\\u043D\\u0442\\u0435\\u0440\\u0435\\u0441\\u043E\\u0432\\u0430\\u043D\\u043D\\u043E\\u0439 \\u0441\\u0442\\u043E\\u0440\\u043E\\u043D\\u0435 \\u043D\\u0430 \\u043F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435, \\u0441\\u0431\\u043E\\u0440,\\n              \\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0438 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445 \\u0441\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u0439 \\u043E \\u0441\\u0435\\u0431\\u0435.\\n            </Text>\\n          </Box>\\n          <Box>\\n            <block.S style={{ display: 'flex' }}>\\n              <Button\\n                onClick={() => alert('Hi!')}\\n                text=\\\"\\u041D\\u0430\\u0437\\u0430\\u0434\\\"\\n                priority=\\\"secondary\\\"\\n                outlined\\n                style={{ marginRight: '30px' }}\\n              />\\n              <Button onClick={() => alert('Hi!')} text=\\\"\\u0414\\u0430\\u043B\\u044C\\u0448\\u0435\\\" priority=\\\"secondary\\\" />\\n            </block.S>\\n          </Box>\\n        </>\\n      }\\n      position=\\\"bottom\\\"\\n    >\\n      <State initial={false} change={(i) => !i}>\\n        {(value, change) => (\\n          <Checkbox\\n            checked={value}\\n            id=\\\"id\\\"\\n            onChange={change}\\n            text=\\\"\\u0421\\u043E\\u0433\\u043B\\u0430\\u0441\\u0438\\u0435 \\u043D\\u0430 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0443 \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\\\"\\n            priority=\\\"primary\\\"\\n          />\\n        )}\\n      </State>\\n    </Tooltip>\\n  </block.L>\\n</Playground>\\n\")), mdx(\"h2\", null, \"Example with VerticalBox\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(Accordion, {\n    priority: \"primary\",\n    isOpen: false,\n    title: mdx(Box, {\n      mdxType: \"Box\"\n    }, mdx(Text, {\n      type: \"L\",\n      mdxType: \"Text\"\n    }, \"Short recomendation when to use accordion\\xA0\")),\n    mdxType: \"Accordion\"\n  }, mdx(BoxVertical, {\n    mdxType: \"BoxVertical\"\n  }, mdx(Box, {\n    mdxType: \"Box\"\n  }, mdx(Text, {\n    type: \"S\",\n    mdxType: \"Text\"\n  }, \"To organize related information\\xA0\")), mdx(Box, {\n    mdxType: \"Box\"\n  }, mdx(Text, {\n    type: \"S\",\n    mdxType: \"Text\"\n  }, \"To shorten pages and reduce scrolling when content is not crucial to read in full.\\xA0\")), mdx(Box, {\n    mdxType: \"Box\"\n  }, mdx(Text, {\n    type: \"S\",\n    mdxType: \"Text\"\n  }, \"When space is at a premium and long content cannot be displayed all at once, like on a mobile interface or in a side panel.\\xA0\")), mdx(Box, {\n    mdxType: \"Box\"\n  }, mdx(TextArea, {\n    name: \"name\",\n    placeholder: \"Please, left some comments\",\n    onChange: function onChange() {\n      return console.info('On textarea change');\n    },\n    priority: \"primary\",\n    overflow: \"hidden\",\n    mdxType: \"TextArea\"\n  }))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <Accordion\\n    priority=\\\"primary\\\"\\n    isOpen={false}\\n    title={\\n      <Box>\\n        <Text type=\\\"L\\\">Short recomendation when to use accordion&nbsp;</Text>\\n      </Box>\\n    }\\n  >\\n    <BoxVertical>\\n      <Box>\\n        <Text type=\\\"S\\\">To organize related information&nbsp;</Text>\\n      </Box>\\n      <Box>\\n        <Text type=\\\"S\\\">\\n          To shorten pages and reduce scrolling when content is not crucial to read in full.&nbsp;\\n        </Text>\\n      </Box>\\n      <Box>\\n        <Text type=\\\"S\\\">\\n          When space is at a premium and long content cannot be displayed all at once, like on a\\n          mobile interface or in a side panel.&nbsp;\\n        </Text>\\n      </Box>\\n      <Box>\\n        <TextArea\\n          name=\\\"name\\\"\\n          placeholder=\\\"Please, left some comments\\\"\\n          onChange={() => console.info('On textarea change')}\\n          priority=\\\"primary\\\"\\n          overflow=\\\"hidden\\\"\\n        />\\n      </Box>\\n    </BoxVertical>\\n  </Accordion>\\n</Playground>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}]}},"pageContext":{"ids":["13c06742-e5e0-534f-acb0-d39da955f16b"],"package":"woly","category":"atoms","name":"box","pages":{"13c06742-e5e0-534f-acb0-d39da955f16b":{"name":"box","category":"atoms","package":"woly","type":"usage"}}}},"staticQueryHashes":["1297603051"]}