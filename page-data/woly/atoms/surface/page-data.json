{"componentChunkName":"component---node-modules-gatsby-theme-woly-src-templates-usage-js","path":"/woly/atoms/surface","result":{"pageContext":{"package":"woly","category":"atoms","name":"surface","pages":[{"type":"usage","meta":{"name":"surface","category":"atoms","package":"woly"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar links = [{\n  id: \"fwed324fcse\",\n  content: \"John\",\n  disabled: false\n}, {\n  id: \"fwed32q4fcss\",\n  content: \"Alex\",\n  disabled: true\n}, {\n  id: \"fwed32q4fcsw\",\n  content: \"Michael\",\n  disabled: false\n}, {\n  id: \"fwed32q4fcsb\",\n  content: \"Donald\",\n  disabled: false\n}];\nvar _frontmatter = {};\nvar layoutProps = {\n  links: links,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Surface\"), \" is a simple layer that contains information. Surface can be used inside Popover or Sidebar component.\"), mdx(\"h3\", null, \"Example\"), mdx(\"p\", null, \"Simple text inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Surface\"), \".\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(Surface, {\n    priority: \"primary\",\n    weight: \"fill\",\n    mdxType: \"Surface\"\n  }, mdx(Content, {\n    mdxType: \"Content\"\n  }, mdx(Text, {\n    type: \"XS\",\n    mdxType: \"Text\"\n  }, \"Surface content\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <Surface priority=\\\"primary\\\" weight=\\\"fill\\\">\\n    <Content>\\n      <Text type=\\\"XS\\\">Surface content</Text>\\n    </Content>\\n  </Surface>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Sign in form\"), mdx(\"p\", null, \"Sign in form based on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Surface\"), \".\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(State, {\n    initial: false,\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(block.L, {\n      style: {\n        width: '300px',\n        padding: '350px 0'\n      }\n    }, mdx(Popover, {\n      isOpen: false,\n      content: mdx(Surface, {\n        priority: \"primary\",\n        mdxType: \"Surface\"\n      }, mdx(FormBlock, {\n        mdxType: \"FormBlock\"\n      }, mdx(Label, {\n        priority: \"primary\",\n        mdxType: \"Label\"\n      }, \"Name\"), mdx(Input, {\n        name: \"name\",\n        onChange: function onChange() {\n          return console.info('On input change');\n        },\n        placeholder: \"Ivan Ivanov\",\n        type: \"text\",\n        priority: \"primary\",\n        mdxType: \"Input\"\n      }), mdx(Label, {\n        priority: \"primary\",\n        mdxType: \"Label\"\n      }, \"Password\"), mdx(Input, {\n        name: \"password\",\n        onChange: function onChange() {\n          return console.info('On input change');\n        },\n        type: \"password\",\n        priority: \"primary\",\n        mdxType: \"Input\"\n      }), mdx(Button, {\n        style: {\n          marginTop: '20px'\n        },\n        onClick: function onClick() {},\n        text: \"Submit\",\n        type: \"submit\",\n        priority: \"primary\",\n        mdxType: \"Button\"\n      }))),\n      mdxType: \"Popover\"\n    }, mdx(Button, {\n      onClick: change,\n      text: \"Sign in\",\n      priority: \"primary\",\n      mdxType: \"Button\"\n    })));\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <State initial={false} change={(i) => !i}>\\n    {(value, change) => (\\n      <block.L style={{ width: '300px', padding: '350px 0' }}>\\n        <Popover\\n          isOpen={false}\\n          content={\\n            <Surface priority=\\\"primary\\\">\\n              <FormBlock>\\n                <Label priority=\\\"primary\\\">Name</Label>\\n                <Input\\n                  name=\\\"name\\\"\\n                  onChange={() => console.info('On input change')}\\n                  placeholder=\\\"Ivan Ivanov\\\"\\n                  type=\\\"text\\\"\\n                  priority=\\\"primary\\\"\\n                />\\n                <Label priority=\\\"primary\\\">Password</Label>\\n                <Input\\n                  name=\\\"password\\\"\\n                  onChange={() => console.info('On input change')}\\n                  type=\\\"password\\\"\\n                  priority=\\\"primary\\\"\\n                />\\n                <Button\\n                  style={{ marginTop: '20px' }}\\n                  onClick={() => {}}\\n                  text=\\\"Submit\\\"\\n                  type=\\\"submit\\\"\\n                  priority=\\\"primary\\\"\\n                />\\n              </FormBlock>\\n            </Surface>\\n          }\\n        >\\n          <Button onClick={change} text=\\\"Sign in\\\" priority=\\\"primary\\\" />\\n        </Popover>\\n      </block.L>\\n    )}\\n  </State>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Aside menu\"), mdx(\"p\", null, \"Aside menu based on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Surface\"), \".\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(State, {\n    initial: false,\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(\"block\", {\n      style: {\n        position: 'relative',\n        width: '400px',\n        padding: '0 0 350px 0'\n      }\n    }, mdx(ButtonIcon, {\n      onClick: change,\n      priority: \"default\",\n      weight: \"transparent\",\n      style: {\n        position: 'absolute',\n        left: value ? '250px' : '60px',\n        zIndex: 2,\n        transition: '1s'\n      },\n      icon: value ? mdx(IconClose, {\n        mdxType: \"IconClose\"\n      }) : mdx(Threebars, {\n        mdxType: \"Threebars\"\n      }),\n      mdxType: \"ButtonIcon\"\n    }), mdx(Aside, {\n      style: {\n        width: value ? '250px' : '40px',\n        paddingLeft: value ? '10px' : '60px'\n      },\n      mdxType: \"Aside\"\n    }, mdx(Surface, {\n      priority: \"primary\",\n      weight: \"goast\",\n      mdxType: \"Surface\"\n    }, mdx(ListContainer, {\n      style: {\n        paddingLeft: '30px',\n        paddingTop: '70px'\n      },\n      priority: \"primary\",\n      as: \"ul\",\n      mdxType: \"ListContainer\"\n    }, links.map(function (_ref2) {\n      var id = _ref2.id,\n          content = _ref2.content;\n      return mdx(ListItem, {\n        key: id,\n        as: \"a\",\n        href: \"#\".concat(id),\n        onClick: function onClick() {\n          console.log(id);\n        },\n        text: content,\n        mdxType: \"ListItem\"\n      });\n    })))));\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <State initial={false} change={(i) => !i}>\\n    {(value, change) => (\\n      <block style={{ position: 'relative', width: '400px', padding: '0 0 350px 0' }}>\\n        <ButtonIcon\\n          onClick={change}\\n          priority=\\\"default\\\"\\n          weight=\\\"transparent\\\"\\n          style={{\\n            position: 'absolute',\\n            left: value ? '250px' : '60px',\\n            zIndex: 2,\\n            transition: '1s',\\n          }}\\n          icon={value ? <IconClose /> : <Threebars />}\\n        />\\n        <Aside style={{ width: value ? '250px' : '40px', paddingLeft: value ? '10px' : '60px' }}>\\n          <Surface priority=\\\"primary\\\" weight=\\\"goast\\\">\\n            <ListContainer\\n              style={{ paddingLeft: '30px', paddingTop: '70px' }}\\n              priority=\\\"primary\\\"\\n              as=\\\"ul\\\"\\n            >\\n              {links.map(({ id, content }) => (\\n                <ListItem\\n                  key={id}\\n                  as=\\\"a\\\"\\n                  href={`#${id}`}\\n                  onClick={() => {\\n                    console.log(id);\\n                  }}\\n                  text={content}\\n                />\\n              ))}\\n            </ListContainer>\\n          </Surface>\\n        </Aside>\\n      </block>\\n    )}\\n  </State>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Kinds\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Surface\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Base surface\")))), mdx(\"h3\", null, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"children\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Pass any content as a children property within Surface component.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"priority\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"'secondary'\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Priority prop to style Surface component\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"weight\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"goast\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Set surface`s weight (ex.: fill, goast)\")))));\n}\n;\nMDXContent.isMDXComponent = true;"}]}},"staticQueryHashes":["1297603051"]}