{"componentChunkName":"component---node-modules-gatsby-theme-woly-src-templates-usage-js","path":"/woly/molecules/radio-button","result":{"pageContext":{"package":"woly","category":"molecules","name":"radio-button","pages":[{"type":"usage","meta":{"name":"radio-button","category":"molecules","package":"woly"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RadioButton\"), \" component lets you add a radio button and assign it to a radio group.\\nUsers can select only one radio button at a time within a radio group.\"), mdx(\"h3\", null, \"Radio button group.\"), mdx(\"p\", null, \"Radio buttons are used for mutually exclusive choices, not for multiple choices.\\nOnly one radio button can be selected at a time.\\nWhen a user chooses a new item, the previous choice is automatically deselected.\"), mdx(\"h3\", null, \"Example\"), mdx(Playground, {\n    direction: \"vertical\",\n    mdxType: \"Playground\"\n  }, mdx(State, {\n    initial: \"no\",\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(React.Fragment, null, mdx(RadioButton, {\n      name: \"my-input\",\n      id: \"yes\",\n      checked: value,\n      onChange: change,\n      priority: \"primary\",\n      text: \"yes\",\n      mdxType: \"RadioButton\"\n    }), mdx(RadioButton, {\n      name: \"my-input\",\n      id: \"no\",\n      checked: value,\n      onChange: change,\n      priority: \"primary\",\n      text: \"no\",\n      mdxType: \"RadioButton\"\n    }));\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground direction=\\\"vertical\\\">\\n  <State initial=\\\"no\\\" change={(i) => !i}>\\n    {(value, change) => (\\n      <>\\n        <RadioButton\\n          name=\\\"my-input\\\"\\n          id=\\\"yes\\\"\\n          checked={value}\\n          onChange={change}\\n          priority=\\\"primary\\\"\\n          text=\\\"yes\\\"\\n        />\\n        <RadioButton\\n          name=\\\"my-input\\\"\\n          id=\\\"no\\\"\\n          checked={value}\\n          onChange={change}\\n          priority=\\\"primary\\\"\\n          text=\\\"no\\\"\\n        />\\n      </>\\n    )}\\n  </State>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Disabled\"), mdx(\"p\", null, \"Disabled radio button are uneditable. They have less opacity so that they appear less tappable.\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(State, {\n    initial: false,\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(RadioButton, {\n      id: \"one\",\n      checked: true,\n      disabled: true,\n      priority: \"primary\",\n      text: \"disabled\",\n      onChange: change,\n      mdxType: \"RadioButton\"\n    });\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <State initial={false} change={(i) => !i}>\\n    {(value, change) => (\\n      <RadioButton id=\\\"one\\\" checked disabled priority=\\\"primary\\\" text=\\\"disabled\\\" onChange={change} />\\n    )}\\n  </State>\\n</Playground>\\n\")), mdx(\"h3\", null, \"prioritys\"), mdx(\"p\", null, \"Primary and danger prioritys are should be used to focus user attention.\"), mdx(Playground, {\n    direction: \"vertical\",\n    mdxType: \"Playground\"\n  }, mdx(State, {\n    initial: \"no\",\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(React.Fragment, null, mdx(RadioButton, {\n      name: \"my-input\",\n      id: \"yes\",\n      checked: value,\n      onChange: change,\n      priority: \"primary\",\n      text: \"yes\",\n      mdxType: \"RadioButton\"\n    }), mdx(RadioButton, {\n      name: \"my-input\",\n      id: \"no\",\n      checked: value,\n      onChange: change,\n      priority: \"primary\",\n      text: \"no\",\n      mdxType: \"RadioButton\"\n    }));\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground direction=\\\"vertical\\\">\\n  <State initial=\\\"no\\\" change={(i) => !i}>\\n    {(value, change) => (\\n      <>\\n        <RadioButton\\n          name=\\\"my-input\\\"\\n          id=\\\"yes\\\"\\n          checked={value}\\n          onChange={change}\\n          priority=\\\"primary\\\"\\n          text=\\\"yes\\\"\\n        />\\n        <RadioButton\\n          name=\\\"my-input\\\"\\n          id=\\\"no\\\"\\n          checked={value}\\n          onChange={change}\\n          priority=\\\"primary\\\"\\n          text=\\\"no\\\"\\n        />\\n      </>\\n    )}\\n  </State>\\n</Playground>\\n\")), mdx(Playground, {\n    direction: \"vertical\",\n    mdxType: \"Playground\"\n  }, mdx(State, {\n    initial: \"no\",\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(React.Fragment, null, mdx(RadioButton, {\n      name: \"my-input\",\n      id: \"yes\",\n      checked: value,\n      onChange: change,\n      priority: \"danger\",\n      text: \"yes\",\n      mdxType: \"RadioButton\"\n    }), mdx(RadioButton, {\n      name: \"my-input\",\n      id: \"no\",\n      checked: value,\n      onChange: change,\n      priority: \"danger\",\n      text: \"no\",\n      mdxType: \"RadioButton\"\n    }));\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground direction=\\\"vertical\\\">\\n  <State initial=\\\"no\\\" change={(i) => !i}>\\n    {(value, change) => (\\n      <>\\n        <RadioButton\\n          name=\\\"my-input\\\"\\n          id=\\\"yes\\\"\\n          checked={value}\\n          onChange={change}\\n          priority=\\\"danger\\\"\\n          text=\\\"yes\\\"\\n        />\\n        <RadioButton\\n          name=\\\"my-input\\\"\\n          id=\\\"no\\\"\\n          checked={value}\\n          onChange={change}\\n          priority=\\\"danger\\\"\\n          text=\\\"no\\\"\\n        />\\n      </>\\n    )}\\n  </State>\\n</Playground>\\n\")), mdx(\"p\", null, \"Secondary priority should be used as default priority\"), mdx(Playground, {\n    direction: \"vertical\",\n    mdxType: \"Playground\"\n  }, mdx(State, {\n    initial: \"no\",\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(React.Fragment, null, mdx(RadioButton, {\n      name: \"my-input\",\n      id: \"yes\",\n      checked: value,\n      onChange: change,\n      priority: \"secondary\",\n      text: \"yes\",\n      mdxType: \"RadioButton\"\n    }), mdx(RadioButton, {\n      name: \"my-input\",\n      id: \"no\",\n      checked: value,\n      onChange: change,\n      priority: \"secondary\",\n      text: \"no\",\n      mdxType: \"RadioButton\"\n    }));\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground direction=\\\"vertical\\\">\\n  <State initial=\\\"no\\\" change={(i) => !i}>\\n    {(value, change) => (\\n      <>\\n        <RadioButton\\n          name=\\\"my-input\\\"\\n          id=\\\"yes\\\"\\n          checked={value}\\n          onChange={change}\\n          priority=\\\"secondary\\\"\\n          text=\\\"yes\\\"\\n        />\\n        <RadioButton\\n          name=\\\"my-input\\\"\\n          id=\\\"no\\\"\\n          checked={value}\\n          onChange={change}\\n          priority=\\\"secondary\\\"\\n          text=\\\"no\\\"\\n        />\\n      </>\\n    )}\\n  </State>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"checked\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Whether radio-button is checked or not\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"disabled\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Disable radio-button\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"id\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"HTML id attribute\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"onChange\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ChangeEventHandler<HTMLInputElement>\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Callback when radio-button is clicked\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"priority\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"'default'\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Priority prop to style RadioButton component\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"...\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"HTMLInputElement\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{}\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Other props are inherited from \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"HTMLInputElement\"))))));\n}\n;\nMDXContent.isMDXComponent = true;"}]}},"staticQueryHashes":["1297603051"]}