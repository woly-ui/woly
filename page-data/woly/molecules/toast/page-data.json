{"componentChunkName":"component---node-modules-gatsby-theme-woly-src-templates-usage-js","path":"/woly/molecules/toast","result":{"pageContext":{"package":"woly","category":"molecules","name":"toast","pages":[{"type":"usage","meta":{"name":"toast","category":"molecules","package":"woly"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Toast\"), \" is lightweight notification designed to mimic the push notifications.\\nToast is intended to be small interruptions to your visitors or users,\\nand therefore should contain minimal, to-the-point, non-interactive content.\"), mdx(\"h3\", null, \"Example\"), mdx(\"p\", null, \"Siple Toast with text only\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(block.L, null, mdx(Toast, {\n    priority: \"primary\",\n    outlined: true,\n    mdxType: \"Toast\"\n  }, \"\\u0420\\u0435\\u0436\\u0438\\u043C \\u043F\\u0440\\u0435\\u0434\\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u044B\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <block.L>\\n    <Toast priority=\\\"primary\\\" outlined>\\n      \\u0420\\u0435\\u0436\\u0438\\u043C \\u043F\\u0440\\u0435\\u0434\\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u044B\\n    </Toast>\\n  </block.L>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Icons\"), mdx(\"p\", null, \"Toast can be used with icon on the left side.\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(block.L, null, mdx(Toast, {\n    icon: mdx(IconPlus, {\n      mdxType: \"IconPlus\"\n    }),\n    priority: \"primary\",\n    outlined: true,\n    mdxType: \"Toast\"\n  }, \"\\u041F\\u0435\\u0440\\u0435\\u0442\\u0430\\u0449\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0430 XLS\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <block.L>\\n    <Toast icon={<IconPlus />} priority=\\\"primary\\\" outlined>\\n      \\u041F\\u0435\\u0440\\u0435\\u0442\\u0430\\u0449\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0430 XLS\\n    </Toast>\\n  </block.L>\\n</Playground>\\n\")), mdx(\"p\", null, \"Toast can also consist action block\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(block.L, {\n    style: {\n      width: '1200px'\n    }\n  }, mdx(Toast, {\n    priority: \"primary\",\n    outlined: true,\n    action: mdx(React.Fragment, null, mdx(Button, {\n      icon: mdx(IconSearch, {\n        mdxType: \"IconSearch\"\n      }),\n      onClick: function onClick() {\n        return console.info('IconClose clicked');\n      },\n      priority: \"primary\",\n      text: \"Submit\",\n      mdxType: \"Button\"\n    }), mdx(Button, {\n      icon: mdx(IconSearch, {\n        mdxType: \"IconSearch\"\n      }),\n      onClick: function onClick() {\n        return console.info('IconClose clicked');\n      },\n      priority: \"secondary\",\n      text: \"Cancel\",\n      outlined: true,\n      mdxType: \"Button\"\n    })),\n    mdxType: \"Toast\"\n  }, \"\\u041F\\u0435\\u0440\\u0435\\u0442\\u0430\\u0449\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0430 XLS, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E \\u0442\\u0430\\u0440\\u0438\\u0444\\u0430\\u0445\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <block.L style={{ width: '1200px' }}>\\n    <Toast\\n      priority=\\\"primary\\\"\\n      outlined\\n      action={\\n        <>\\n          <Button\\n            icon={<IconSearch />}\\n            onClick={() => console.info('IconClose clicked')}\\n            priority=\\\"primary\\\"\\n            text=\\\"Submit\\\"\\n          />\\n          <Button\\n            icon={<IconSearch />}\\n            onClick={() => console.info('IconClose clicked')}\\n            priority=\\\"secondary\\\"\\n            text=\\\"Cancel\\\"\\n            outlined\\n          />\\n        </>\\n      }\\n    >\\n      \\u041F\\u0435\\u0440\\u0435\\u0442\\u0430\\u0449\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0430 XLS, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E \\u0442\\u0430\\u0440\\u0438\\u0444\\u0430\\u0445\\n    </Toast>\\n  </block.L>\\n</Playground>\\n\")), mdx(\"p\", null, \"Or even both\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(block.L, {\n    style: {\n      width: '1200px'\n    }\n  }, mdx(Toast, {\n    icon: mdx(IconPlus, {\n      mdxType: \"IconPlus\"\n    }),\n    priority: \"primary\",\n    outlined: true,\n    action: mdx(React.Fragment, null, mdx(Button, {\n      onClick: function onClick() {\n        return console.info('IconClose clicked');\n      },\n      priority: \"primary\",\n      text: \"Submit\",\n      mdxType: \"Button\"\n    }), mdx(Button, {\n      onClick: function onClick() {\n        return console.info('IconClose clicked');\n      },\n      priority: \"primary\",\n      text: \"Cancel\",\n      outlined: true,\n      mdxType: \"Button\"\n    })),\n    mdxType: \"Toast\"\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0432\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0440\\u0435\\u0436\\u0438\\u043C\\u0430 \\u043F\\u0440\\u0435\\u0434\\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <block.L style={{ width: '1200px' }}>\\n    <Toast\\n      icon={<IconPlus />}\\n      priority=\\\"primary\\\"\\n      outlined\\n      action={\\n        <>\\n          <Button\\n            onClick={() => console.info('IconClose clicked')}\\n            priority=\\\"primary\\\"\\n            text=\\\"Submit\\\"\\n          />\\n          <Button\\n            onClick={() => console.info('IconClose clicked')}\\n            priority=\\\"primary\\\"\\n            text=\\\"Cancel\\\"\\n            outlined\\n          />\\n        </>\\n      }\\n    >\\n      \\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0432\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0440\\u0435\\u0436\\u0438\\u043C\\u0430 \\u043F\\u0440\\u0435\\u0434\\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430\\n    </Toast>\\n  </block.L>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Priorities\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(block.L, {\n    style: {\n      width: '1200px'\n    }\n  }, mdx(Toast, {\n    icon: mdx(IconPlus, {\n      mdxType: \"IconPlus\"\n    }),\n    priority: \"secondary\",\n    outlined: true,\n    action: mdx(React.Fragment, null, mdx(Button, {\n      onClick: function onClick() {\n        return console.info('IconClose clicked');\n      },\n      priority: \"secondary\",\n      text: \"Submit\",\n      outlined: true,\n      mdxType: \"Button\"\n    }), mdx(Button, {\n      onClick: function onClick() {\n        return console.info('IconClose clicked');\n      },\n      priority: \"secondary\",\n      text: \"Cancel\",\n      outlined: true,\n      mdxType: \"Button\"\n    })),\n    mdxType: \"Toast\"\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0432\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0440\\u0435\\u0436\\u0438\\u043C\\u0430 \\u043F\\u0440\\u0435\\u0434\\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <block.L style={{ width: '1200px' }}>\\n    <Toast\\n      icon={<IconPlus />}\\n      priority=\\\"secondary\\\"\\n      outlined\\n      action={\\n        <>\\n          <Button\\n            onClick={() => console.info('IconClose clicked')}\\n            priority=\\\"secondary\\\"\\n            text=\\\"Submit\\\"\\n            outlined\\n          />\\n          <Button\\n            onClick={() => console.info('IconClose clicked')}\\n            priority=\\\"secondary\\\"\\n            text=\\\"Cancel\\\"\\n            outlined\\n          />\\n        </>\\n      }\\n    >\\n      \\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0432\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0440\\u0435\\u0436\\u0438\\u043C\\u0430 \\u043F\\u0440\\u0435\\u0434\\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430\\n    </Toast>\\n  </block.L>\\n</Playground>\\n\")), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(block.L, {\n    style: {\n      width: '1200px'\n    }\n  }, mdx(Toast, {\n    icon: mdx(IconPlus, {\n      mdxType: \"IconPlus\"\n    }),\n    priority: \"primary\",\n    outlined: true,\n    action: mdx(React.Fragment, null, mdx(Button, {\n      onClick: function onClick() {\n        return console.info('IconClose clicked');\n      },\n      priority: \"primary\",\n      text: \"Submit\",\n      outlined: true,\n      mdxType: \"Button\"\n    }), mdx(Button, {\n      onClick: function onClick() {\n        return console.info('IconClose clicked');\n      },\n      priority: \"primary\",\n      text: \"Cancel\",\n      outlined: true,\n      mdxType: \"Button\"\n    })),\n    mdxType: \"Toast\"\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0432\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0440\\u0435\\u0436\\u0438\\u043C\\u0430 \\u043F\\u0440\\u0435\\u0434\\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <block.L style={{ width: '1200px' }}>\\n    <Toast\\n      icon={<IconPlus />}\\n      priority=\\\"primary\\\"\\n      outlined\\n      action={\\n        <>\\n          <Button\\n            onClick={() => console.info('IconClose clicked')}\\n            priority=\\\"primary\\\"\\n            text=\\\"Submit\\\"\\n            outlined\\n          />\\n          <Button\\n            onClick={() => console.info('IconClose clicked')}\\n            priority=\\\"primary\\\"\\n            text=\\\"Cancel\\\"\\n            outlined\\n          />\\n        </>\\n      }\\n    >\\n      \\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F, \\u0447\\u0442\\u043E\\u0431\\u044B \\u0432\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0440\\u0435\\u0436\\u0438\\u043C\\u0430 \\u043F\\u0440\\u0435\\u0434\\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430\\n    </Toast>\\n  </block.L>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"action\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"null\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Block of action items (ex. One element or grop that can be clicked)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"content\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"null\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Component to show the icon near the text (ex.: Icon on the left side)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"children\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"`\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"null\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Content block\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"outlined\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Change toast`s view from filled to outlined\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"priority\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"'secondary'\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Priority prop to style Toast component\")))));\n}\n;\nMDXContent.isMDXComponent = true;"}]}},"staticQueryHashes":["1297603051"]}