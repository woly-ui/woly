{"componentChunkName":"component---node-modules-gatsby-theme-woly-src-templates-usage-js","path":"/woly/molecules/switch","result":{"data":{"usage":{"fileAbsolutePath":"/home/runner/work/woly/woly/src/woly/molecules/switch/usage.mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Switch is used to choose between two different options.\"), mdx(\"h3\", null, \"Example\"), mdx(Playground, {\n    direction: \"horizontal\",\n    mdxType: \"Playground\"\n  }, mdx(State, {\n    initial: false,\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(Switch, {\n      id: \"unchecked\",\n      checked: value,\n      onChange: change,\n      priority: \"primary\",\n      mdxType: \"Switch\"\n    });\n  }), mdx(State, {\n    initial: true,\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(Switch, {\n      id: \"checked\",\n      checked: value,\n      onChange: change,\n      priority: \"primary\",\n      mdxType: \"Switch\"\n    });\n  }), mdx(State, {\n    initial: false,\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(Switch, {\n      id: \"disabled-unchecked\",\n      checked: value,\n      onChange: change,\n      priority: \"primary\",\n      disabled: true,\n      mdxType: \"Switch\"\n    });\n  }), mdx(State, {\n    initial: true,\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(Switch, {\n      id: \"disabled-checked\",\n      checked: value,\n      onChange: change,\n      priority: \"primary\",\n      disabled: true,\n      mdxType: \"Switch\"\n    });\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground direction=\\\"horizontal\\\">\\n  <State initial={false} change={(i) => !i}>\\n    {(value, change) => (\\n      <Switch id=\\\"unchecked\\\" checked={value} onChange={change} priority=\\\"primary\\\" />\\n    )}\\n  </State>\\n  <State initial={true} change={(i) => !i}>\\n    {(value, change) => (\\n      <Switch id=\\\"checked\\\" checked={value} onChange={change} priority=\\\"primary\\\" />\\n    )}\\n  </State>\\n  <State initial={false} change={(i) => !i}>\\n    {(value, change) => (\\n      <Switch\\n        id=\\\"disabled-unchecked\\\"\\n        checked={value}\\n        onChange={change}\\n        priority=\\\"primary\\\"\\n        disabled\\n      />\\n    )}\\n  </State>\\n  <State initial={true} change={(i) => !i}>\\n    {(value, change) => (\\n      <Switch id=\\\"disabled-checked\\\" checked={value} onChange={change} priority=\\\"primary\\\" disabled />\\n    )}\\n  </State>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Switch with Label\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(State, {\n    initial: false,\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '30px',\n        background: value ? 'black' : 'white'\n      }\n    }, mdx(Label, {\n      style: {\n        paddingRight: '20px'\n      },\n      priority: value ? 'primary' : 'secondary',\n      mdxType: \"Label\"\n    }, \"Dark mode\"), mdx(Switch, {\n      id: \"set-mode\",\n      checked: value,\n      onChange: change,\n      priority: \"primary\",\n      mdxType: \"Switch\"\n    }));\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <State initial={false} change={(i) => !i}>\\n    {(value, change) => (\\n      <div\\n        style={{\\n          display: 'flex',\\n          alignItems: 'center',\\n          padding: '30px',\\n          background: value ? 'black' : 'white',\\n        }}\\n      >\\n        <Label style={{ paddingRight: '20px' }} priority={value ? 'primary' : 'secondary'}>\\n          Dark mode\\n        </Label>\\n        <Switch id=\\\"set-mode\\\" checked={value} onChange={change} priority=\\\"primary\\\" />\\n      </div>\\n    )}\\n  </State>\\n</Playground>\\n\")), mdx(\"h3\", null, \"prioritys\"), mdx(\"p\", null, \"Error priority focus attention user on error\"), mdx(Playground, {\n    direction: \"horizontal\",\n    mdxType: \"Playground\"\n  }, mdx(State, {\n    initial: false,\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(Switch, {\n      id: \"unchecked\",\n      checked: value,\n      onChange: change,\n      priority: \"danger\",\n      mdxType: \"Switch\"\n    });\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground direction=\\\"horizontal\\\">\\n  <State initial={false} change={(i) => !i}>\\n    {(value, change) => (\\n      <Switch id=\\\"unchecked\\\" checked={value} onChange={change} priority=\\\"danger\\\" />\\n    )}\\n  </State>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Kinds\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Switch\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Base switch. Useful for creating a new kind of switch\")))), mdx(\"h3\", null, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"checked\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Whether switch is checked or not\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"disabled\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Disable switch\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"id\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"HTML id attribute\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"onChange\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ChangeEventHandler<HTMLInputElement>\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Callback when switch is clicked\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"priority\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"'secondary'\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Priority prop to style Switch component\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"...\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"HTMLInputElement\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"{}\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Other props are inherited from \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"HTMLInputElement\"))))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"pageID":"69af31b0-0d7d-5f27-a643-8fe44f875685","name":"switch","category":"molecules","package":"woly"}},"staticQueryHashes":["1297603051"]}