{"componentChunkName":"component---node-modules-gatsby-theme-woly-src-templates-usage-js","path":"/woly/molecules/tabs","result":{"pageContext":{"package":"woly","category":"molecules","name":"tabs","pages":[{"type":"usage","meta":{"name":"tabs","category":"molecules","package":"woly"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar links = [{\n  id: \"fwed324fcse\",\n  content: \"John Doeh\",\n  active: true\n}, {\n  id: \"fwed32q4fcss\",\n  content: \"Alex Miller\",\n  active: false\n}, {\n  id: \"fwed324fcse\",\n  content: \"Ann Adams\",\n  active: false\n}];\nvar linksMap = [{\n  id: \"fwed324fcse\",\n  content: \"John Doeh\",\n  active: true\n}, {\n  id: \"fwed32q4fcss\",\n  content: \"Alex Miller\",\n  active: false\n}, {\n  id: \"fwed324fcse\",\n  content: \"Ann Adams\",\n  active: false\n}, {\n  id: \"fwed324fcse\",\n  content: \"Ann Adams\",\n  active: false\n}, {\n  id: \"fwed324fcse\",\n  content: \"Ann Adams\",\n  active: false\n}, {\n  id: \"fwed324fcse\",\n  content: \"Ann Adams\",\n  active: false\n}, {\n  id: \"fwed324fcse\",\n  content: \"Ann Adams\",\n  active: false\n}, {\n  id: \"fwed324fcse\",\n  content: \"Ann Adams\",\n  active: false\n}, {\n  id: \"fwed324fcse\",\n  content: \"Ann Adams\",\n  active: false\n}, {\n  id: \"fwed324fcse\",\n  content: \"Ann Adams\",\n  active: false\n}];\nvar _frontmatter = {\n  \"name\": \"tabs\",\n  \"category\": \"molecules\",\n  \"package\": \"woly\"\n};\nvar layoutProps = {\n  links: links,\n  linksMap: linksMap,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tabs\"), \" organize and allow navigation between groups of content that are related and at the same level of hierarchy.\"), mdx(\"p\", null, \"A Tabs appears at the top (rarely bottom) of an app screen and lets people quickly switch among different sections of an app.\\nA tab bar may contain any number of tabs, but the number of visible tabs varies based on the device size and orientation.\\nIf some tabs can\\u2019t be displayed due to limited horizontal space, the final visible tab becomes a More tab, which reveals the additional tabs in a list on a separate screen.\"), mdx(\"p\", null, \"In general, use a tab bar to organize information at the app level. A tab bar is a good way to flatten your information hierarchy and provide access to several peer information categories or modes at the same time.\\nAim for the right number of tabs. Too many tabs reduce the tappable area of each tab and increase the complexity of your app, which can make it harder for people to locate information. Too few tabs can be a problem too,\\nas it can make your interface appear disconnected. Although a More tab can display extra tabs, it requires an additional tap to reveal them and can be a poor use of space. Include essential tabs only, and use the minimum number of tabs necessary for your information hierarchy.\\nDon\\u2019t remove or disable a tab when its function is unavailable. If tabs are available in some cases but not in others, your app\\u2019s interface becomes unstable and unpredictable.\\nEnsure that all tabs are always enabled, and explain why a tab\\u2019s content is unavailable.\"), mdx(\"h3\", null, \"Example\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(block.L, {\n    style: {\n      width: '1200px'\n    }\n  }, mdx(Tabs, {\n    priority: \"default\",\n    mdxType: \"Tabs\"\n  }, links.map(function (_ref2) {\n    var active = _ref2.active,\n        id = _ref2.id,\n        content = _ref2.content,\n        iconLeft = _ref2.iconLeft;\n    return mdx(Tab, {\n      active: active,\n      key: id,\n      path: \"#\".concat(id),\n      iconAction: mdx(ButtonIcon, {\n        icon: mdx(IconClose, {\n          mdxType: \"IconClose\"\n        }),\n        onClick: function onClick() {\n          console.log('click icon');\n        },\n        priority: \"default\",\n        weight: \"transparent\",\n        mdxType: \"ButtonIcon\"\n      }),\n      text: content,\n      onClick: function onClick() {\n        return console.log(\"click \".concat(id));\n      },\n      priority: \"default\",\n      mdxType: \"Tab\"\n    });\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <block.L style={{ width: '1200px' }}>\\n    <Tabs priority=\\\"default\\\">\\n      {links.map(({ active, id, content, iconLeft }) => (\\n        <Tab\\n          active={active}\\n          key={id}\\n          path={`#${id}`}\\n          iconAction={\\n            <ButtonIcon\\n              icon={<IconClose />}\\n              onClick={() => {\\n                console.log('click icon');\\n              }}\\n              priority=\\\"default\\\"\\n              weight=\\\"transparent\\\"\\n            />\\n          }\\n          text={content}\\n          onClick={() => console.log(`click ${id}`)}\\n          priority=\\\"default\\\"\\n        />\\n      ))}\\n    </Tabs>\\n  </block.L>\\n</Playground>\\n\")), mdx(\"h2\", null, \"Priorities\"), mdx(\"p\", null, \"Primary priority can be used to style tabs in brand color.\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(block.L, {\n    style: {\n      width: '1200px'\n    }\n  }, mdx(Tabs, {\n    priority: \"primary\",\n    mdxType: \"Tabs\"\n  }, links.map(function (_ref3) {\n    var active = _ref3.active,\n        id = _ref3.id,\n        content = _ref3.content,\n        iconLeft = _ref3.iconLeft;\n    return mdx(Tab, {\n      weight: \"fill\",\n      active: active,\n      key: id,\n      path: \"#\".concat(id),\n      iconAction: mdx(ButtonIcon, {\n        icon: mdx(IconClose, {\n          mdxType: \"IconClose\"\n        }),\n        onClick: function onClick() {\n          console.log('click icon');\n        },\n        priority: \"primary\",\n        mdxType: \"ButtonIcon\"\n      }),\n      text: content,\n      onClick: function onClick() {\n        return console.log(\"click \".concat(id));\n      },\n      priority: \"primary\",\n      mdxType: \"Tab\"\n    });\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <block.L style={{ width: '1200px' }}>\\n    <Tabs priority=\\\"primary\\\">\\n      {links.map(({ active, id, content, iconLeft }) => (\\n        <Tab\\n          weight=\\\"fill\\\"\\n          active={active}\\n          key={id}\\n          path={`#${id}`}\\n          iconAction={\\n            <ButtonIcon\\n              icon={<IconClose />}\\n              onClick={() => {\\n                console.log('click icon');\\n              }}\\n              priority=\\\"primary\\\"\\n            />\\n          }\\n          text={content}\\n          onClick={() => console.log(`click ${id}`)}\\n          priority=\\\"primary\\\"\\n        />\\n      ))}\\n    </Tabs>\\n  </block.L>\\n</Playground>\\n\")), mdx(\"p\", null, \"Secondary priority should be used as default variant.\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(block.L, {\n    style: {\n      width: '1200px'\n    }\n  }, mdx(\"div\", {\n    style: {\n      display: 'flex'\n    }\n  }, links.map(function (_ref4) {\n    var active = _ref4.active,\n        id = _ref4.id,\n        content = _ref4.content;\n    return mdx(Tab, {\n      weight: \"transparent\",\n      active: active,\n      key: id,\n      path: \"#\".concat(id),\n      text: content,\n      onClick: function onClick() {\n        return console.log(\"click \".concat(id));\n      },\n      priority: \"default\",\n      mdxType: \"Tab\"\n    });\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <block.L style={{ width: '1200px' }}>\\n    <div style={{ display: 'flex' }}>\\n      {links.map(({ active, id, content }) => (\\n        <Tab\\n          weight=\\\"transparent\\\"\\n          active={active}\\n          key={id}\\n          path={`#${id}`}\\n          text={content}\\n          onClick={() => console.log(`click ${id}`)}\\n          priority=\\\"default\\\"\\n        />\\n      ))}\\n    </div>\\n  </block.L>\\n</Playground>\\n\")), mdx(\"h2\", null, \"Icons\"), mdx(\"p\", null, \"Tab can have an optional icon on the left side ex. icon, logo or avatar.\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(block.L, {\n    style: {\n      width: '1200px'\n    }\n  }, mdx(Tabs, {\n    priority: \"default\",\n    mdxType: \"Tabs\"\n  }, links.map(function (_ref5) {\n    var active = _ref5.active,\n        id = _ref5.id,\n        content = _ref5.content,\n        iconLeft = _ref5.iconLeft;\n    return mdx(Tab, {\n      active: active,\n      key: id,\n      path: \"#\".concat(id),\n      iconLeft: mdx(IconPlus, {\n        mdxType: \"IconPlus\"\n      }),\n      iconAction: mdx(ButtonIcon, {\n        icon: mdx(IconClose, {\n          mdxType: \"IconClose\"\n        }),\n        onClick: function onClick() {\n          console.log('click icon');\n        },\n        priority: \"default\",\n        weight: \"outline\",\n        mdxType: \"ButtonIcon\"\n      }),\n      text: content,\n      onClick: function onClick() {\n        return console.log(\"click \".concat(id));\n      },\n      priority: \"default\",\n      mdxType: \"Tab\"\n    });\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <block.L style={{ width: '1200px' }}>\\n    <Tabs priority=\\\"default\\\">\\n      {links.map(({ active, id, content, iconLeft }) => (\\n        <Tab\\n          active={active}\\n          key={id}\\n          path={`#${id}`}\\n          iconLeft={<IconPlus />}\\n          iconAction={\\n            <ButtonIcon\\n              icon={<IconClose />}\\n              onClick={() => {\\n                console.log('click icon');\\n              }}\\n              priority=\\\"default\\\"\\n              weight=\\\"outline\\\"\\n            />\\n          }\\n          text={content}\\n          onClick={() => console.log(`click ${id}`)}\\n          priority=\\\"default\\\"\\n        />\\n      ))}\\n    </Tabs>\\n  </block.L>\\n</Playground>\\n\")), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(block.L, {\n    style: {\n      width: '1200px'\n    }\n  }, mdx(Tabs, {\n    priority: \"default\",\n    mdxType: \"Tabs\"\n  }, linksMap.map(function (_ref6) {\n    var active = _ref6.active,\n        id = _ref6.id,\n        content = _ref6.content,\n        iconLeft = _ref6.iconLeft;\n    return mdx(Tab, {\n      active: active,\n      key: id,\n      path: \"#\".concat(id),\n      iconLeft: mdx(IconPlus, {\n        mdxType: \"IconPlus\"\n      }),\n      iconAction: mdx(ButtonIcon, {\n        icon: mdx(IconClose, {\n          mdxType: \"IconClose\"\n        }),\n        onClick: console.log('click'),\n        priority: \"default\",\n        weight: \"transparent\",\n        mdxType: \"ButtonIcon\"\n      }),\n      text: content,\n      onClick: function onClick() {\n        return console.log(\"click \".concat(id));\n      },\n      priority: \"default\",\n      mdxType: \"Tab\"\n    });\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <block.L style={{ width: '1200px' }}>\\n    <Tabs priority=\\\"default\\\">\\n      {linksMap.map(({ active, id, content, iconLeft }) => (\\n        <Tab\\n          active={active}\\n          key={id}\\n          path={`#${id}`}\\n          iconLeft={<IconPlus />}\\n          iconAction={\\n            <ButtonIcon\\n              icon={<IconClose />}\\n              onClick={console.log('click')}\\n              priority=\\\"default\\\"\\n              weight=\\\"transparent\\\"\\n            />\\n          }\\n          text={content}\\n          onClick={() => console.log(`click ${id}`)}\\n          priority=\\\"default\\\"\\n        />\\n      ))}\\n    </Tabs>\\n  </block.L>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Tab Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"path\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Href - attribute that adds url adress to tab component\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"iconAction\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"null\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Element appears on right side near tab component`s text (ex.: action block, that consists a button)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"iconLeft\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.ReactNode\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"null\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Element appears on left side near tab component`s text (ex.: icon or avatar)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"onClick\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"React.MouseEvent<HTMLDivElement>\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"null\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Callback when tab component is clicked\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"priority\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"'secondary'\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Priority prop to style Tab component\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"tabIndex\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Set tabIndex to Tab component\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"text\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Tab component`s text (ex.: url adress as ussual, in such cases text)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"weight\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"outline\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Add weight to style Tab component\")))), mdx(\"h3\", null, \"Tabs Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"priority\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"'secondary'\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Priority prop to style Tabs component\")))));\n}\n;\nMDXContent.isMDXComponent = true;"}]}},"staticQueryHashes":["1297603051"]}