{"componentChunkName":"component---node-modules-gatsby-theme-woly-src-templates-usage-js","path":"/package/woly/component/backdrop","result":{"data":{"usage":{"frontmatter":{"name":"backdrop","package":"woly","category":"atoms"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"name\": \"backdrop\",\n  \"category\": \"atoms\",\n  \"package\": \"woly\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Backdrop\"), \" is a dark layer that covers full screen. It can be used in Modal windows or Aside menu panel.\"), mdx(\"h3\", null, \"Example\"), mdx(\"p\", null, \"Modal based on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Backdrop\"), \".\"), mdx(Playground, {\n    mdxType: \"Playground\"\n  }, mdx(State, {\n    initial: false,\n    change: function change(i) {\n      return !i;\n    },\n    mdxType: \"State\"\n  }, function (value, change) {\n    return mdx(React.Fragment, null, mdx(Button, {\n      onClick: change,\n      text: \"Open modal\",\n      mdxType: \"Button\"\n    }), mdx(Modal, {\n      style: {\n        visibility: value ? 'visible' : 'hidden'\n      },\n      mdxType: \"Modal\"\n    }, mdx(Surface, {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '20px 30px'\n      },\n      mdxType: \"Surface\"\n    }, mdx(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '0',\n        right: '0'\n      }\n    }, mdx(ButtonIcon, {\n      icon: mdx(CloseIcon, {\n        mdxType: \"CloseIcon\"\n      }),\n      onClick: change,\n      variant: \"secondary\",\n      mdxType: \"ButtonIcon\"\n    })), mdx(\"h3\", null, \"Add new user\"), mdx(\"p\", null, mdx(\"label\", null, mdx(\"span\", null, \"Name\"), mdx(Input, {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Enter your name here\",\n      onChange: function onChange(event) {\n        return console.info('On input name change');\n      },\n      mdxType: \"Input\"\n    }))), mdx(\"label\", null, mdx(\"span\", null, \"Email\"), mdx(Input, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Enter your email here\",\n      onChange: function onChange(event) {\n        return console.info('On input email change');\n      },\n      mdxType: \"Input\"\n    })), mdx(\"p\", null, mdx(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      }\n    }, mdx(Button, {\n      onClick: change,\n      text: \"Save\",\n      variant: \"primary\",\n      mdxType: \"Button\"\n    }), mdx(Button, {\n      onClick: change,\n      text: \"Cancel\",\n      mdxType: \"Button\"\n    }))))), mdx(Backdrop, {\n      style: {\n        visibility: value ? 'visible' : 'hidden'\n      },\n      onClick: change,\n      mdxType: \"Backdrop\"\n    }));\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Playground>\\n  <State initial={false} change={(i) => !i}>\\n    {(value, change) => (\\n      <>\\n        <Button onClick={change} text=\\\"Open modal\\\" />\\n        <Modal style={{ visibility: value ? 'visible' : 'hidden' }}>\\n          <Surface style={{ display: 'flex', flexDirection: 'column', padding: '20px 30px' }}>\\n            <div style={{ position: 'absolute', top: '0', right: '0' }}>\\n              <ButtonIcon icon={<CloseIcon />} onClick={change} variant=\\\"secondary\\\" />\\n            </div>\\n            <h3>Add new user</h3>\\n            <p>\\n              <label>\\n                <span>Name</span>\\n                <Input\\n                  type=\\\"text\\\"\\n                  name=\\\"name\\\"\\n                  placeholder=\\\"Enter your name here\\\"\\n                  onChange={(event) => console.info('On input name change')}\\n                />\\n              </label>\\n            </p>\\n            <label>\\n              <span>Email</span>\\n              <Input\\n                type=\\\"email\\\"\\n                name=\\\"email\\\"\\n                placeholder=\\\"Enter your email here\\\"\\n                onChange={(event) => console.info('On input email change')}\\n              />\\n            </label>\\n            <p>\\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\\n                <Button onClick={change} text=\\\"Save\\\" variant=\\\"primary\\\" />\\n                <Button onClick={change} text=\\\"Cancel\\\" />\\n              </div>\\n            </p>\\n          </Surface>\\n        </Modal>\\n        <Backdrop style={{ visibility: value ? 'visible' : 'hidden' }} onClick={change} />\\n      </>\\n    )}\\n  </State>\\n</Playground>\\n\")), mdx(\"h3\", null, \"Kinds\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"Backdrop\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Base backdrop\")))), mdx(\"h3\", null, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"variant\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"'default'\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Variant prop to style Backdrop component\")))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"pageID":"e67d4c1a-df42-5449-85af-1727e6ead295"}},"staticQueryHashes":["1158639554"]}